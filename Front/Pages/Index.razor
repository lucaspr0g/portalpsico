@page "/"
@using Application.Queries.Psychologist.Search
@using Domain.Entities
@using MediatR
@using Front.Components
@using BlazorPro.Spinkit;
@inject IMediator mediator

<PageTitle>Index</PageTitle>

<h1>Psico Online</h1>

<div class="container">
	<div class="row">
		<Search OnSearchChanged="SearchChanged" />
	</div>
	<br />
	<div class="row">
		<Loading IsLoading="_isLoading">
			<ChildContent>
				<GridPsicologos Psychologists="_psychologists"></GridPsicologos>
			</ChildContent>
		</Loading>
	</div>
</div>

@code {
	bool _isLoading = true;
	List<Psychologist>? _psychologists;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
			await SearchChanged(default);
	}

	public async Task SearchChanged(string[]? parameters)
	{
		if (!_isLoading)
			await ToggleLoading();

		var name = parameters is null ? default : parameters[0];
		var state = parameters is null ? default : parameters[1];

		_psychologists = await mediator.Send(new PsychologistSearchQuery(default, name, state));

		await ToggleLoading();
	}

    public async Task ToggleLoading()
	{
		_isLoading = !_isLoading;
		await Task.Delay(1);
		StateHasChanged();
	}
}